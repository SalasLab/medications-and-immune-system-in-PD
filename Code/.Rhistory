max.overlaps=12,
label.size=0.2
)
ggplot(u, aes(x=X0, y=X1, label=WHO_CMTRT)) +
geom_point() +
# xlim(-12, 12) +
# ylim(7, 17) +
geom_text_repel(
box.padding=0.2,
label.padding = 0.2,
max.overlaps=12,
label.size=0.2
)
library(table1)
library(reshape2)
library(dplyr)
library(comorbidity)
library(plyr)
library(ggplot2)
library(glue)
library(wordcloud)
df = read.csv("../Data/formatted/230117_steve_df_with_drugs.csv", check.names = FALSE)
# Make a melt comorbidities dataframe (id=(patno, visit_id); drug_group and 1/0 as value).
# Subset patients taking each drug (drug_group == 1)
li = c("visit_date", "Current_age", "Gender_reported", "CONCOHORT_DEFINITION", "Bas", "Bmem", "Bnv", "CD4mem",
"CD4nv", "CD8mem", "CD8nv", "Eos", "Mono", "Neu", "NK", "Treg", "NLR", "drug_count")
comorb = df[, -which(names(df) %in% li)]
comorb = melt(comorb, id=c("PATNO", "EVENT_ID"))
comorb = comorb[comorb["value"] != 0, ]
comorb = dplyr::rename(comorb, drug_group=variable)
# Load ICD10 key dataframe & merge with melted comorbidities dataframe
icd10 = read.csv("../Data/formatted/ICD10_key.csv")
colnames(icd10) = c("drug_group", "icd10")
comorb = comorb %>% left_join(icd10, by="drug_group")
comorb = comorb[order(comorb$PATNO),]
row.names(comorb) <- NULL
head(comorb)
charlson = comorbidity(x = comorb, id = "PATNO", code = "icd10", map = "charlson_icd10_quan", assign0 = FALSE)
scores = score(charlson, weights = "quan", assign0 = FALSE)
# Merge with PATNO and then with 'df'
scores = data.frame(unique(comorb$PATNO), scores)
colnames(scores) = c("PATNO", "CCI")
df = df %>% left_join(scores, by="PATNO")
df <- df %>% mutate(CCI = ifelse(is.na(CCI), 0, CCI))
# Age-adjusted CCI scores
df$AA_CCI_weight = ifelse(df$Current_age < 50, 0,
ifelse(df$Current_age >=50 & df$Current_age <60, 1,
ifelse(df$Current_age >=60 & df$Current_age <70, 2,
ifelse(df$Current_age >=70 & df$Current_age <80, 3,
ifelse(df$Current_age >=80, 4, NaN)))))
df$AA_CCI = df$CCI + df$AA_CCI_weight
# remove intermediate AA_CCI columns
df = subset(df, select = -c(AA_CCI_weight,CCI))
df$AA_CCI_bins = ifelse(df$AA_CCI <1, 'low risk',
ifelse(df$AA_CCI >=1 & df$AA_CCI <3, 'mild risk',
ifelse(df$AA_CCI >=3 & df$AA_CCI <5, 'moderate risk',
ifelse(df$AA_CCI >=5, 'severe risk', NaN))))
df$Bas_zscore    <- ave(df$Bas, df$CONCOHORT_DEFINITION, FUN=scale)
df$Bmem_zscore   <- ave(df$Bmem, df$CONCOHORT_DEFINITION, FUN=scale)
df$Bnv_zscore    <- ave(df$Bnv, df$CONCOHORT_DEFINITION, FUN=scale)
df$CD4mem_zscore <- ave(df$CD4mem, df$CONCOHORT_DEFINITION, FUN=scale)
df$CD4nv_zscore  <- ave(df$CD4nv, df$CONCOHORT_DEFINITION, FUN=scale)
df$CD8mem_zscore <- ave(df$CD8mem, df$CONCOHORT_DEFINITION, FUN=scale)
df$CD8nv_zscore  <- ave(df$CD8nv, df$CONCOHORT_DEFINITION, FUN=scale)
df$Eos_zscore    <- ave(df$Eos, df$CONCOHORT_DEFINITION, FUN=scale)
df$Mono_zscore   <- ave(df$Mono, df$CONCOHORT_DEFINITION, FUN=scale)
df$Neu_zscore    <- ave(df$Neu, df$CONCOHORT_DEFINITION, FUN=scale)
df$NK_zscore     <- ave(df$NK, df$CONCOHORT_DEFINITION, FUN=scale)
df$Treg_zscore   <- ave(df$Treg, df$CONCOHORT_DEFINITION, FUN=scale)
# REMOVE patients on PD drugs & raw immune cells
df = df[df$`Parkinson's drug` == 0,]
df = subset(df, select = -c(Bas, Bmem, Bnv, CD4mem, CD4nv, CD8mem, CD8nv, Eos, Mono, Neu, NK, Treg, NLR, `Parkinson's drug`))
# reorder columns, so that all the 'metadata' is first, immune cells are next, then medications
df = df[, c(1:6, 94:108, 7:93)]
write.csv(df, '../Data/formatted/230122_MASTER.csv')
drug_usage = data.frame(colSums(df[, c(22:108)]))
colnames(drug_usage) = 'count'
row.names(drug_usage)[row.names(drug_usage) == "Supplement or multivitamin"] <- "Multivitamin"
set.seed(1234) # for reproducibility
pal = c( "#A65628", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "#FFFF33","#E41A1C", "#F781BF", "#999999")
wordcloud(words = rownames(drug_usage), freq = drug_usage$count, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35,            colors=pal, scale=c(3, 0.4))
# Broader medication categories
CVD = c(
"Antianginal drug",
"Antiarrhythmic drug",
"Cholesterol drug",
"Heart failure drug",
"Hypertension drug",
"Aspirin",
"Pulmonary hypertension drug",
"Hypotension drug",
"Phosphodiesterase inhibitors",
"Antidiuretic drug")
neurological = c(
"ADHD_narcolepsy drug",
"Anticholinergic drug",
"Antiemetic drug",
"Antiepileptic drug",
"Antipsychotic drug",
"Anxiety drug",
"Depression drug",
"Insomnia drug",
"Migraine drug",
"Alzheimer's drug",
"Vertigo",
"Cholinergic agonist drug")
pain_rheuma = c(
"Antiinflammatory drug",
"Gout drug",
"Analgesic NSAID",
"Analgesic opiate",
"Analgesic prescription",
"Analgesic nonprescription",
"Nonsteroid cream",
"Muscle relaxant drug",
"Hydroxychloroquine"
)
asthma_copd_allergy = c(
"COPD inhaler",
"Epinephrine",
"Antihistamine drug",
"Steroid inhaler",
"Nonsteroid inhaler")
infection = c(
"Antiviral drug",
"Antiseptic drug",
"Cough drug",
"Decongestant drug",
"Antibiotic",
"Antifungal drug",
"Malaria drug",
"HIV ART drug",
"Anesthetic drug")
affecting_immune_cells = c(
"Bone marrow stimulant",
# "bone marrow suppressants (duplicated)",
"Immunoglobulin drug",
"Cancer drug",
"Immunosuppressant drug"
)
other_degenerative = c(
"Bladder relaxant drug",
"Prostate hyperplasia drug",
"Glaucoma drug",
"Macular degeneration drug",
"Osteoporosis drug")
metabolism_medication = c(
"PAP sleep apnea",
"Antidiabetic drug",
"Weight loss drug",
"Gaucher's disease"
)
suppplements = c(
"Supplement calcium",
"Supplement cannabis",
"Supplement probiotic",
"Supplement iron",
"Supplement fiber",
"Supplement mineral",
"Supplement omega",
"Supplement or multivitamin")
vaccines = c(
"Vaccine COVID",
"Vaccine influenza",
"Vaccine shingles",
"Vaccine other"
)
hormone_related = c(
"Estrogen systemic",
"Estrogen topical",
"Steroid systemic",
"Steroid topical",
"Steroid ophthalmic",
"Hyperthyroidism drug",
"Hypothyroidism drug",
"Testosterone topical",
"Testosterone systemic"
)
GI_tract = c(
"IBS_diarrhoea drug",
"Laxative",
"Acid reflux drug",
"Antiflatulent drug",
"Abortion drug"  # stomach protectant (against NSAID ulcers)
)
other = c(
"Other",
"Eye drops")
df$`Immunomodulatory medication` =  rowSums(df[, affecting_immune_cells])
df$`CVD medication` =  rowSums(df[, CVD])
df$`Neurological medication` =  rowSums(df[, neurological])
df$`Pain & Rheuma medication` =  rowSums(df[, pain_rheuma])
df$`Asthma & COPD & Allergy medication` =  rowSums(df[, asthma_copd_allergy])
df$`Hormonal medication` =  rowSums(df[, hormone_related])
df$`Other degenerative disease medication` =  rowSums(df[, other_degenerative])
df$`Metabolic disease medication` =  rowSums(df[, metabolism_medication])
df$`GI tract medication` =  rowSums(df[, GI_tract])
df$`Infection medication` =  rowSums(df[, infection])
df$`Vaccine` =  rowSums(df[, vaccines])
df$`Supplements & vitamins` =  rowSums(df[, suppplements])
df[109:119] <- lapply(df[109:120], function (x) {ifelse(x > 0, 1, 0)})
View(df)
df[109:120] <- lapply(df[109:120], function (x) {ifelse(x > 0, 1, 0)})
df$`Immunomodulatory medication` =  rowSums(df[, affecting_immune_cells])
df$`CVD medication` =  rowSums(df[, CVD])
df$`Neurological medication` =  rowSums(df[, neurological])
df$`Pain & Rheuma medication` =  rowSums(df[, pain_rheuma])
df$`Asthma & COPD & Allergy medication` =  rowSums(df[, asthma_copd_allergy])
df$`Hormonal medication` =  rowSums(df[, hormone_related])
df$`Other degenerative disease medication` =  rowSums(df[, other_degenerative])
df$`Metabolic disease medication` =  rowSums(df[, metabolism_medication])
df$`GI tract medication` =  rowSums(df[, GI_tract])
df$`Infection medication` =  rowSums(df[, infection])
df$`Vaccine` =  rowSums(df[, vaccines])
df$`Supplements & vitamins` =  rowSums(df[, suppplements])
df[109:120] <- lapply(df[109:120], function (x) {ifelse(x > 0, 1, 0)})
df[, 109:119] = sapply(df[, 109:120],as.character)
df[,109:119][df[, 109:120] == '0']  <- NA
df$`Immunomodulatory medication` =  rowSums(df[, affecting_immune_cells])
df$`CVD medication` =  rowSums(df[, CVD])
df$`Neurological medication` =  rowSums(df[, neurological])
df$`Pain & Rheuma medication` =  rowSums(df[, pain_rheuma])
df$`Asthma & COPD & Allergy medication` =  rowSums(df[, asthma_copd_allergy])
df$`Hormonal medication` =  rowSums(df[, hormone_related])
df$`Other degenerative disease medication` =  rowSums(df[, other_degenerative])
df$`Metabolic disease medication` =  rowSums(df[, metabolism_medication])
df$`GI tract medication` =  rowSums(df[, GI_tract])
df$`Infection medication` =  rowSums(df[, infection])
df$`Vaccine` =  rowSums(df[, vaccines])
df$`Supplements & vitamins` =  rowSums(df[, suppplements])
df[109:120] <- lapply(df[109:120], function (x) {ifelse(x > 0, 1, 0)})
df[, 109:120] = sapply(df[, 109:120],as.character)
df[,109:120][df[, 109:120] == '0']  <- NA
df$CONCOHORT_DEFINITION = factor(df$CONCOHORT_DEFINITION, levels=c("Healthy Control", "Prodromal", "Parkinson's Disease"))
my.render.cat = function(x) {
c("", sapply(stats.default(x), function(y) with(y,
sprintf("%d (%0.0f %%)", FREQ, PCT))))
}
T1 = table1(data = df,
~ Current_age + Gender_reported + drug_count + AA_CCI_bins +
`CVD medication` + `Neurological medication` + `Pain & Rheuma medication` +
`Asthma & COPD & Allergy medication` + `Hormonal medication` +
`Other degenerative disease medication` + `Metabolic disease medication` +
`GI tract medication` + `Infection medication` + `Supplements & vitamins` |
CONCOHORT_DEFINITION, render.categorical=my.render.cat, render.missing = NULL)
T1
write.csv(T1, '../Data/formatted/table1_.csv')
T1 = table1(data = df,
~ Current_age + Gender_reported + drug_count + AA_CCI_bins +
`Immunomodulatory medication` +
`CVD medication` + `Neurological medication` + `Pain & Rheuma medication` +
`Asthma & COPD & Allergy medication` + `Hormonal medication` +
`Other degenerative disease medication` + `Metabolic disease medication` +
`GI tract medication` + `Infection medication` + `Supplements & vitamins` |
CONCOHORT_DEFINITION, render.categorical=my.render.cat, render.missing = NULL)
T1
write.csv(T1, '../Data/formatted/table1_.csv')
dat = read.csv('../Data/formatted/230122_MASTER.csv')
dat = read.csv('../Data/formatted/230122_MASTER.csv')
View(dat)
install.packages(robCompositions)
install.packages("robCompositions")
install.packages("robCompositions")
install.packages("robCompositions")
install.packages("robCompositions")
install.packages("robCompositions")
library(robCompositions)
install.packages("robCompositions")
library(robCompositions)
install.packages("robCompositions")
library(robCompositions)
library(ggplot2)
install.packages("robCompositions")
library(robCompositions)
library(DirichletReg)
dat = read.csv('../Data/formatted/230122_MASTER.csv')
??impprop
example(plot.DirichletRegData)
example(DirichReg)
head(BloodSamples)
Bl <- DR_data(BloodSamples[,1:4])
summary(Bl)
dat = read.csv('../Data/formatted/230122_MASTER.csv')
colnames(dat)
library(table1)
library(reshape2)
library(dplyr)
library(comorbidity)
library(plyr)
library(ggplot2)
library(glue)
library(wordcloud)
df = read.csv("../Data/formatted/230117_steve_df_with_drugs.csv", check.names = FALSE)
# Make a melt comorbidities dataframe (id=(patno, visit_id); drug_group and 1/0 as value).
# Subset patients taking each drug (drug_group == 1)
li = c("visit_date", "Current_age", "Gender_reported", "CONCOHORT_DEFINITION", "Bas", "Bmem", "Bnv", "CD4mem",
"CD4nv", "CD8mem", "CD8nv", "Eos", "Mono", "Neu", "NK", "Treg", "NLR", "drug_count")
comorb = df[, -which(names(df) %in% li)]
comorb = melt(comorb, id=c("PATNO", "EVENT_ID"))
comorb = comorb[comorb["value"] != 0, ]
comorb = dplyr::rename(comorb, drug_group=variable)
# Load ICD10 key dataframe & merge with melted comorbidities dataframe
icd10 = read.csv("../Data/formatted/ICD10_key.csv")
colnames(icd10) = c("drug_group", "icd10")
comorb = comorb %>% left_join(icd10, by="drug_group")
comorb = comorb[order(comorb$PATNO),]
row.names(comorb) <- NULL
head(comorb)
charlson = comorbidity(x = comorb, id = "PATNO", code = "icd10", map = "charlson_icd10_quan", assign0 = FALSE)
scores = score(charlson, weights = "quan", assign0 = FALSE)
# Merge with PATNO and then with 'df'
scores = data.frame(unique(comorb$PATNO), scores)
colnames(scores) = c("PATNO", "CCI")
df = df %>% left_join(scores, by="PATNO")
df <- df %>% mutate(CCI = ifelse(is.na(CCI), 0, CCI))
# Age-adjusted CCI scores
df$AA_CCI_weight = ifelse(df$Current_age < 50, 0,
ifelse(df$Current_age >=50 & df$Current_age <60, 1,
ifelse(df$Current_age >=60 & df$Current_age <70, 2,
ifelse(df$Current_age >=70 & df$Current_age <80, 3,
ifelse(df$Current_age >=80, 4, NaN)))))
df$AA_CCI = df$CCI + df$AA_CCI_weight
# remove intermediate AA_CCI columns
df = subset(df, select = -c(AA_CCI_weight,CCI))
df$AA_CCI_bins = ifelse(df$AA_CCI <1, 'low risk',
ifelse(df$AA_CCI >=1 & df$AA_CCI <3, 'mild risk',
ifelse(df$AA_CCI >=3 & df$AA_CCI <5, 'moderate risk',
ifelse(df$AA_CCI >=5, 'severe risk', NaN))))
df$Bas_zscore    <- ave(df$Bas, df$CONCOHORT_DEFINITION, FUN=scale)
df$Bmem_zscore   <- ave(df$Bmem, df$CONCOHORT_DEFINITION, FUN=scale)
df$Bnv_zscore    <- ave(df$Bnv, df$CONCOHORT_DEFINITION, FUN=scale)
df$CD4mem_zscore <- ave(df$CD4mem, df$CONCOHORT_DEFINITION, FUN=scale)
df$CD4nv_zscore  <- ave(df$CD4nv, df$CONCOHORT_DEFINITION, FUN=scale)
df$CD8mem_zscore <- ave(df$CD8mem, df$CONCOHORT_DEFINITION, FUN=scale)
df$CD8nv_zscore  <- ave(df$CD8nv, df$CONCOHORT_DEFINITION, FUN=scale)
df$Eos_zscore    <- ave(df$Eos, df$CONCOHORT_DEFINITION, FUN=scale)
df$Mono_zscore   <- ave(df$Mono, df$CONCOHORT_DEFINITION, FUN=scale)
df$Neu_zscore    <- ave(df$Neu, df$CONCOHORT_DEFINITION, FUN=scale)
df$NK_zscore     <- ave(df$NK, df$CONCOHORT_DEFINITION, FUN=scale)
df$Treg_zscore   <- ave(df$Treg, df$CONCOHORT_DEFINITION, FUN=scale)
# REMOVE patients on PD drugs & raw immune cells
df = df[df$`Parkinson's drug` == 0,]
df = subset(df, select = -`Parkinson's drug`)
View(df)
library(hash)
di <- hash()
di[['CVD']] = c(
"Antianginal drug",
"Antiarrhythmic drug",
"Cholesterol drug",
"Heart failure drug",
"Hypertension drug",
"Aspirin",
"Pulmonary hypertension drug",
"Hypotension drug",
"Phosphodiesterase inhibitors",
"Antidiuretic drug")
di
di[['CVD']]
di
keys(di)
hash(
'CVD'= c(
"Antianginal drug",
"Antiarrhythmic drug",
"Cholesterol drug",
"Heart failure drug",
"Hypertension drug",
"Aspirin",
"Pulmonary hypertension drug",
"Hypotension drug",
"Phosphodiesterase inhibitors",
"Antidiuretic drug"),
'neurological' = c(
"ADHD_narcolepsy drug",
"Anticholinergic drug",
"Antiemetic drug",
"Antiepileptic drug",
"Antipsychotic drug",
"Anxiety drug",
"Depression drug",
"Insomnia drug",
"Migraine drug",
"Alzheimer's drug",
"Vertigo",
"Cholinergic agonist drug")
)
source(broad_medication_groups.R)
source('broad_medication_groups')
source('broad_medication_groups.R')
di = hash(
'CVD medication'= c(
"Antianginal drug",
"Antiarrhythmic drug",
"Cholesterol drug",
"Heart failure drug",
"Hypertension drug",
"Aspirin",
"Pulmonary hypertension drug",
"Hypotension drug",
"Phosphodiesterase inhibitors",
"Antidiuretic drug"
),
'Neurological medication' = c(
"ADHD_narcolepsy drug",
"Anticholinergic drug",
"Antiemetic drug",
"Antiepileptic drug",
"Antipsychotic drug",
"Anxiety drug",
"Depression drug",
"Insomnia drug",
"Migraine drug",
"Alzheimer's drug",
"Vertigo",
"Cholinergic agonist drug"
),
'Pain & Rheuma medication' = c(
"Antiinflammatory drug",
"Gout drug",
"Analgesic NSAID",
"Analgesic opiate",
"Analgesic prescription",
"Analgesic nonprescription",
"Nonsteroid cream",
"Muscle relaxant drug",
"Hydroxychloroquine"
),
'Respiratory medication' = c(
"COPD inhaler",
"Epinephrine",
"Antihistamine drug",
"Steroid inhaler",
"Nonsteroid inhaler"
),
'Infection medication' = c(
"Antiviral drug",
"Antiseptic drug",
"Cough drug",
"Decongestant drug",
"Antibiotic",
"Antifungal drug",
"Malaria drug",
"HIV ART drug",
"Anesthetic drug"
),
'Immunomodulatory medication' = c(
"Bone marrow stimulant",
# "bone marrow suppressants (duplicated)",
"Immunoglobulin drug",
"Cancer drug",
"Immunosuppressant drug"
),
'Other antidegenerative medication' = c(
"Bladder relaxant drug",
"Prostate hyperplasia drug",
"Glaucoma drug",
"Macular degeneration drug",
"Osteoporosis drug"
),
'Metabolic disease medication' = c(
"PAP sleep apnea",
"Antidiabetic drug",
"Weight loss drug",
"Gaucher's disease"
),
'Supplement & vitamin' = c(
"Supplement calcium",
"Supplement cannabis",
"Supplement probiotic",
"Supplement iron",
"Supplement fiber",
"Supplement mineral",
"Supplement omega",
"Supplement or multivitamin"
),
'Vaccine' = c(
"Vaccine COVID",
"Vaccine influenza",
"Vaccine shingles",
"Vaccine other"
),
'Hormonal medication' = c(
"Estrogen systemic",
"Estrogen topical",
"Steroid systemic",
"Steroid topical",
"Steroid ophthalmic",
"Hyperthyroidism drug",
"Hypothyroidism drug",
"Testosterone topical",
"Testosterone systemic"
),
'GI tract medication' = c(
"IBS_diarrhoea drug",
"Laxative",
"Acid reflux drug",
"Antiflatulent drug",
"Abortion drug"  # stomach protectant (against NSAID ulcers)
),
'Other' = c(
"Other",
"Eye drops")
)
keys(di)
source('broad_medication_groups.R')
source('Code/broad_medication_groups.R')
getwd()
setwd("~/Documents/Dartmouth/Salas lab/Salas_PD/Code")
setwd("~/Documents/Dartmouth/Salas lab/Salas_PD/Code")
getwd()
source('broad_medication_groups.R')
